---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Sidebar from '../../components/Sidebar.astro';
import { categories, questions } from '../../data/questions.js';

export async function getStaticPaths() {
  return categories.map(category => ({
    params: { slug: category.slug },
    props: { category }
  }));
}

const { category } = Astro.props;
const categoryQuestions = questions.filter(q => q.category === category.slug);

function formatDate(dateString: string) {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'short', 
    day: 'numeric'
  });
}

function timeAgo(dateString: string) {
  const date = new Date(dateString);
  const now = new Date();
  const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);
  
  if (diffInSeconds < 60) return 'just now';
  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;
  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;
  if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}d ago`;
  return formatDate(dateString);
}
---

<BaseLayout 
  title={`${category.name} Questions - Quistra`}
  description={`Browse all questions in the ${category.name} category on Quistra`}
  canonical={`/category/${category.slug}/`}
>
  <Header />
  
  <!-- Breadcrumb -->
  <nav class="bg-gray-50 border-b border-gray-200 py-3">
    <div class="container mx-auto px-4">
      <div class="flex items-center space-x-2 text-sm text-gray-600">
        <a href="/" class="hover:text-coral-600 transition-colors">Home</a>
        <span>/</span>
        <span class="text-gray-900">{category.name}</span>
      </div>
    </div>
  </nav>

  <main class="container mx-auto px-4 py-8">
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Main Content -->
      <div class="flex-1">
        <!-- Category Header -->
        <div class="mb-8">
          <h1 class="text-3xl font-bold text-gray-900 mb-2">{category.name}</h1>
          <p class="text-gray-600">
            {categoryQuestions.length} question{categoryQuestions.length !== 1 ? 's' : ''} in this category
          </p>
        </div>

        <!-- Questions List -->
        {categoryQuestions.length === 0 ? (
          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">
            <p class="text-gray-500">No questions in this category yet.</p>
          </div>
        ) : (
          <div class="space-y-4">
            {categoryQuestions.map(question => (
              <article class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow">
                <div class="flex items-start gap-4">
                  <!-- Stats Column -->
                  <div class="flex flex-col items-center space-y-1 min-w-[80px] text-center">
                    <div class="text-lg font-semibold text-gray-700">{question.votes}</div>
                    <div class="text-xs text-gray-500">votes</div>
                    
                    <div class={`text-lg font-semibold ${question.isAnswered ? 'text-green-600' : 'text-gray-700'}`}>
                      {question.answers}
                    </div>
                    <div class="text-xs text-gray-500">answers</div>
                    
                    <div class="text-sm text-gray-600">{question.views}</div>
                    <div class="text-xs text-gray-500">views</div>
                  </div>
                  
                  <!-- Question Content -->
                  <div class="flex-1">
                    <h2 class="text-xl font-semibold mb-2">
                      <a href={`/questions/${question.slug}`} class="text-gray-900 hover:text-coral-600 transition-colors">
                        {question.title}
                      </a>
                    </h2>
                    
                    <p class="text-gray-700 mb-4 line-clamp-2">
                      {question.content}
                    </p>
                    
                    <!-- Tags -->
                    <div class="flex flex-wrap gap-2 mb-4">
                      {question.tags.map(tag => (
                        <a href={`/tags/${tag}`} class="tag hover:bg-gray-200 transition-colors">
                          {tag}
                        </a>
                      ))}
                    </div>
                    
                    <!-- Question Meta -->
                    <div class="flex items-center justify-between text-sm text-gray-600">
                      <div class="flex items-center space-x-2">
                        <span>asked {timeAgo(question.createdAt)}</span>
                        <span>by</span>
                        <span class="font-medium text-gray-900">{question.author.name}</span>
                      </div>
                      
                      {question.isAnswered && (
                        <div class="flex items-center space-x-1 text-green-600">
                          <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                          </svg>
                          <span class="text-xs">answered</span>
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              </article>
            ))}
          </div>
        )}
      </div>

      <!-- Sidebar -->
      <Sidebar />
    </div>
  </main>

  <Footer />
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .tag {
    @apply inline-block px-2 py-1 text-xs font-medium bg-gray-100 text-gray-700 rounded;
  }
</style>
