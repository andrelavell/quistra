---


export interface Props {
  question: {
    id: number;
    slug: string;
    title: string;
    content: string;
    author: {
      name: string;
      reputation: number;
    };
    votes: number;
    answers: number;
    views: number;
    tags: string[];
    createdAt: string;
    isAnswered: boolean;
  };
}

const { question } = Astro.props;

function formatDate(dateString: string) {
  const date = new Date(dateString);
  const now = new Date();
  const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));
  
  if (diffInHours < 24) {
    return `${diffInHours} hours ago`;
  } else {
    const diffInDays = Math.floor(diffInHours / 24);
    return `${diffInDays} days ago`;
  }
}

function truncateContent(content: string, maxLength: number = 150) {
  if (content.length <= maxLength) return content;
  return content.substring(0, maxLength) + '...';
}
---

<article class="question-card">
  <div class="flex gap-4">
    <!-- Vote and stats column -->
    <div class="flex flex-col items-center space-y-2 min-w-[80px]">
      <!-- Votes -->
      <div class="flex flex-col items-center">
        <button class="vote-button upvote-btn" data-type="question" data-id="{question.id}">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7"></path>
          </svg>
        </button>
        <span class="vote-count" data-original="{question.votes}">{question.votes}</span>
        <button class="vote-button downvote-btn" data-type="question" data-id="{question.id}">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
          </svg>
        </button>
      </div>
      
      <!-- Answer count -->
      <div class="text-center mt-4">
        <div class={`px-2 py-1 rounded text-sm font-medium ${question.isAnswered ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-600'}`}>
          {question.answers}
        </div>
        <div class="text-xs text-gray-500 mt-1">answers</div>
      </div>
      
      <!-- Views -->
      <div class="text-center">
        <div class="text-sm font-medium text-gray-600">{question.views}</div>
        <div class="text-xs text-gray-500">views</div>
      </div>
    </div>
    
    <!-- Content column -->
    <div class="flex-1">
      <div class="flex items-start justify-between">
        <div class="flex-1">
          <!-- Meta bar (Reddit-style) -->
          <div class="text-xs text-gray-500 mb-1 flex items-center flex-wrap gap-x-2">
            <span>Posted by <span class="text-gray-700">{question.author.name}</span></span>
            <span>•</span>
            <span>{formatDate(question.createdAt)}</span>
            <span>•</span>
            <a href={`/questions/${question.slug}/`} class="hover:text-gray-700">{question.answers} answers</a>
            <span>•</span>
            <span>{question.views} views</span>
          </div>
          <h3 class="text-lg font-semibold text-gray-900 mb-2">
            <a href={`/questions/${question.slug}/`} class="hover:text-coral-600 transition-colors">
              {question.title}
            </a>
          </h3>
          
          <p class="text-gray-600 text-sm mb-3 leading-relaxed">
            {truncateContent(question.content)}
          </p>
          
          <!-- Tags -->
          <div class="flex flex-wrap gap-1 mb-3">
            {question.tags.map(tag => (
              <a href={`/tags/${tag}`} class="tag hover:bg-gray-200 transition-colors">{tag}</a>
            ))}
          </div>
        </div>
        
        {question.isAnswered && (
          <div class="ml-4">
            <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
              <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
              </svg>
              Solved
            </span>
          </div>
        )}
      </div>
      
    </div>
  </div>
</article>
